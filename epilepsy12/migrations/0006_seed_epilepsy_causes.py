# Generated by Django 4.2 on 2023-04-24 11:46
import logging

from django.db import migrations

from ..general_functions import fetch_ecl

# Logging setup
logger = logging.getLogger(__name__)


def seed_epilepsy_causes(apps, schema_editor):
    """
    This returns all the snomed ct definitions and codes for epilepsy causes.
    Should be run periodically to compare with value in database and update record if has changed
    """

    # Get models
    EpilepsyCause = apps.get_model("epilepsy12", "EpilepsyCause")

    logger.info("\033[33m Seeding all the epilepsy causes from SNOMED... \033[33m")
    if EpilepsyCause.objects.count() > 150:
        logger.info("Causes already exist. Skipping this step...")
        return
    index = 0
    ecl = "<< 363235000"
    # calls the rcpch deprivare server for a list of causes using ECL query language
    epilepsy_causes = fetch_ecl(ecl)
    for cause in epilepsy_causes:
        if EpilepsyCause.objects.filter(conceptId=cause["conceptId"]).exists():
            # duplicate conceptId
            pass
        else:
            new_cause = EpilepsyCause(
                conceptId=cause["conceptId"],
                term=cause["term"],
                preferredTerm=cause["preferredTerm"],
            )
            try:
                new_cause.save()
                index += 1
            except Exception as e:
                logger.info(f"Epilepsy cause {cause['preferredTerm']} not added. {e}")
    logger.info(f"{index} epilepsy causes added")


class Migration(migrations.Migration):
    dependencies = [
        ("epilepsy12", "0005_seed_organisations"),
    ]

    operations = [migrations.RunPython(seed_epilepsy_causes)]
